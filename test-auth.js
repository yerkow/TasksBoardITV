// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch –≤ Node.js 18+
const API_BASE_URL = 'http://localhost:3001/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const testUsers = [
  { email: 'boss@company.com', password: 'password123' },
  { email: 'admin@company.com', password: 'password123' },
  { email: 'user@company.com', password: 'password123' }
];

async function testLogin(email, password) {
  try {
    console.log(`\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –¥–ª—è: ${email}`);
    
    const response = await fetch(`${API_BASE_URL}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email, password })
    });
    
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!');
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${data.user.firstName} ${data.user.lastName}`);
      console.log(`   –†–æ–ª—å: ${data.user.role}`);
      console.log(`   –¢–æ–∫–µ–Ω: ${data.token.substring(0, 20)}...`);
      return true;
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:');
      console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`   –û—à–∏–±–∫–∞: ${data.error || data.message}`);
      return false;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
    return false;
  }
}

async function testAllUsers() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n');
  
  let successCount = 0;
  
  for (const user of testUsers) {
    const success = await testLogin(user.email, user.password);
    if (success) successCount++;
  }
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${successCount}/${testUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É`);
  
  if (successCount === testUsers.length) {
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–µ—Ä–≤–µ—Ä.');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAllUsers().catch(console.error);