# Task Manager - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Windows
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å–∏—Å—Ç–µ–º—É –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

Write-Host "=== Task Manager - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ==="
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ PowerShell
if ($PSVersionTable.PSVersion.Major -lt 5) {
    Write-Host "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.0 –∏–ª–∏ –≤—ã—à–µ" -ForegroundColor Red
    Write-Host "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $($PSVersionTable.PSVersion)" -ForegroundColor Yellow
    exit 1
}
Write-Host "‚úÖ PowerShell –≤–µ—Ä—Å–∏—è: $($PSVersionTable.PSVersion)" -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
function Test-Command($command) {
    try {
        if (Get-Command $command -ErrorAction Stop) { return $true }
    } catch {
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
function Test-Port($port) {
    $connection = Test-NetConnection -ComputerName localhost -Port $port -InformationLevel Quiet -WarningAction SilentlyContinue
    return $connection
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..." -ForegroundColor Cyan
if (Test-Command "node") {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $nodeVersion" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
    $versionNumber = [int]($nodeVersion -replace 'v(\d+)\..*', '$1')
    if ($versionNumber -lt 16) {
        Write-Host "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 16 –∏–ª–∏ –≤—ã—à–µ" -ForegroundColor Yellow
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å: https://nodejs.org/" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å: https://nodejs.org/" -ForegroundColor Yellow
    Write-Host "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ npm..." -ForegroundColor Cyan
if (Test-Command "npm") {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: v$npmVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Git..." -ForegroundColor Cyan
if (Test-Command "git") {
    $gitVersion = git --version
    Write-Host "‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $gitVersion" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Git –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å: https://git-scm.com/download/win" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..." -ForegroundColor Cyan
if (Test-Command "psql") {
    try {
        $pgVersion = psql --version
        Write-Host "‚úÖ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $pgVersion" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–±—ã PostgreSQL
        $pgService = Get-Service -Name "postgresql*" -ErrorAction SilentlyContinue
        if ($pgService) {
            if ($pgService.Status -eq "Running") {
                Write-Host "‚úÖ –°–ª—É–∂–±–∞ PostgreSQL –∑–∞–ø—É—â–µ–Ω–∞" -ForegroundColor Green
            } else {
                Write-Host "‚ö†Ô∏è  –°–ª—É–∂–±–∞ PostgreSQL –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞..." -ForegroundColor Yellow
                try {
                    Start-Service $pgService.Name
                    Write-Host "‚úÖ –°–ª—É–∂–±–∞ PostgreSQL –∑–∞–ø—É—â–µ–Ω–∞" -ForegroundColor Green
                } catch {
                    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É PostgreSQL" -ForegroundColor Red
                    Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–ª—É–∂–±—É –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä" -ForegroundColor Yellow
                }
            }
        } else {
            Write-Host "‚ö†Ô∏è  –°–ª—É–∂–±–∞ PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è  PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å: https://www.postgresql.org/download/windows/" -ForegroundColor Yellow
    Write-Host "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç" -ForegroundColor Yellow
    
    $continue = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ PostgreSQL? (y/N)"
    if ($continue -ne "y" -and $continue -ne "Y") {
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Cyan
if (Test-Command "docker") {
    try {
        $dockerVersion = docker --version
        Write-Host "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ÑπÔ∏è  Docker –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)" -ForegroundColor Gray
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Cyan
$ports = @(3001, 5432, 5173)
foreach ($port in $ports) {
    if (Test-Port $port) {
        Write-Host "‚ö†Ô∏è  –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç" -ForegroundColor Yellow
        $processes = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue | Select-Object OwningProcess
        if ($processes) {
            foreach ($proc in $processes) {
                $processName = (Get-Process -Id $proc.OwningProcess -ErrorAction SilentlyContinue).ProcessName
                Write-Host "   –ü—Ä–æ—Ü–µ—Å—Å: $processName (PID: $($proc.OwningProcess))" -ForegroundColor Gray
            }
        }
    } else {
        Write-Host "‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω" -ForegroundColor Green
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Cyan
$requiredFiles = @(
    "package.json",
    "server/package.json",
    "server/index.js",
    "prisma/schema.prisma",
    ".env.example"
)

$missingFiles = @()
foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file" -ForegroundColor Red
        $missingFiles += $file
    }
}

if ($missingFiles.Count -gt 0) {
    Write-Host "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Red
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Yellow
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
Write-Host "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞..." -ForegroundColor Cyan
if (-not (Test-Path ".env")) {
    if (Test-Path ".env.example") {
        Copy-Item ".env.example" ".env"
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ .env.example" -ForegroundColor Green
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env
        Write-Host "\nüìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:" -ForegroundColor Cyan
        
        $dbHost = Read-Host "–•–æ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: localhost)"
        if ([string]::IsNullOrWhiteSpace($dbHost)) { $dbHost = "localhost" }
        
        $dbPort = Read-Host "–ü–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5432)"
        if ([string]::IsNullOrWhiteSpace($dbPort)) { $dbPort = "5432" }
        
        $dbName = Read-Host "–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: taskmanager)"
        if ([string]::IsNullOrWhiteSpace($dbName)) { $dbName = "taskmanager" }
        
        $dbUser = Read-Host "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: postgres)"
        if ([string]::IsNullOrWhiteSpace($dbUser)) { $dbUser = "postgres" }
        
        $dbPassword = Read-Host "–ü–∞—Ä–æ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -AsSecureString
        $dbPasswordPlain = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($dbPassword))
        
        if ([string]::IsNullOrWhiteSpace($dbPasswordPlain)) {
            Write-Host "‚ö†Ô∏è  –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" -ForegroundColor Yellow
            $dbPasswordPlain = "admin123"
            Write-Host "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin123" -ForegroundColor Yellow
        }
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞
        $jwtSecret = -join ((1..32) | ForEach {[char]((65..90) + (97..122) + (48..57) | Get-Random)})
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
        $envContent = Get-Content ".env"
        $envContent = $envContent -replace 'DATABASE_URL=".*"', "DATABASE_URL=\"postgresql://$dbUser`:$dbPasswordPlain@$dbHost`:$dbPort/$dbName\""
        $envContent = $envContent -replace 'JWT_SECRET=".*"', "JWT_SECRET=\"$jwtSecret\""
        $envContent | Set-Content ".env"
        
        Write-Host "‚úÖ .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Cyan

# –§—Ä–æ–Ω—Ç–µ–Ω–¥
Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..." -ForegroundColor Gray
try {
    npm install
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

# –ë—ç–∫–µ–Ω–¥
Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞..." -ForegroundColor Gray
try {
    Set-Location "server"
    npm install
    Set-Location ".."
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    Set-Location ".."
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Prisma
Write-Host "üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan

try {
    Write-Host "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞..." -ForegroundColor Gray
    npx prisma generate
    Write-Host "‚úÖ Prisma –∫–ª–∏–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
    
    Write-Host "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Gray
    npx prisma db push
    Write-Host "‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    Write-Host "\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:" -ForegroundColor Yellow
    Write-Host "1. PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
    Write-Host "2. –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ .env" -ForegroundColor Yellow
    Write-Host "3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Yellow
    Write-Host "\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é:" -ForegroundColor Yellow
    Write-Host "psql -U postgres -c \"CREATE DATABASE taskmanager;\"" -ForegroundColor Gray
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ uploads
if (-not (Test-Path "uploads")) {
    New-Item -ItemType Directory -Path "uploads" | Out-Null
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ uploads" -ForegroundColor Green
}

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
Write-Host "\n=== –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===" -ForegroundColor Green
Write-Host "\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "\n1. –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞:" -ForegroundColor White
Write-Host "   start-project.bat" -ForegroundColor Gray
Write-Host "\n2. –ò–ª–∏ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫:" -ForegroundColor White
Write-Host "   # –¢–µ—Ä–º–∏–Ω–∞–ª 1 - –ë—ç–∫–µ–Ω–¥:" -ForegroundColor Gray
Write-Host "   cd server && node index.js" -ForegroundColor Gray
Write-Host "   # –¢–µ—Ä–º–∏–Ω–∞–ª 2 - –§—Ä–æ–Ω—Ç–µ–Ω–¥:" -ForegroundColor Gray
Write-Host "   npm run dev" -ForegroundColor Gray

Write-Host "\nüåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:" -ForegroundColor Cyan
Write-Host "   –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:5173" -ForegroundColor Gray
Write-Host "   –ë—ç–∫–µ–Ω–¥:   http://localhost:3001" -ForegroundColor Gray
Write-Host "   Prisma:   http://localhost:5555 (npm run db:studio)" -ForegroundColor Gray

Write-Host "\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:" -ForegroundColor Cyan
Write-Host "   README.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∑–∞–ø—É—Å–∫—É" -ForegroundColor Gray

Write-Host "\nüéâ –£–¥–∞—á–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º!" -ForegroundColor Green