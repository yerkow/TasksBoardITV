const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixUserRoles() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    // –û–±–Ω–æ–≤–∏–º —Ä–æ–ª—å –¥–ª—è admin@company.com –Ω–∞ ADMIN
    const adminUser = await prisma.user.findUnique({
      where: { email: 'admin@company.com' }
    });
    
    if (adminUser) {
      await prisma.user.update({
        where: { email: 'admin@company.com' },
        data: { 
          role: 'ADMIN',
          firstName: '–ú–∞—Ä–∏—è',
          lastName: '–ò–≤–∞–Ω–æ–≤–∞'
        }
      });
      console.log('‚úÖ –†–æ–ª—å admin@company.com –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ ADMIN');
    } else {
      // –°–æ–∑–¥–∞–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin@company.com –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      const bcrypt = require('bcryptjs');
      const hashedPassword = await bcrypt.hash('password123', 10);
      
      await prisma.user.create({
        data: {
          email: 'admin@company.com',
          passwordHash: hashedPassword,
          firstName: '–ú–∞—Ä–∏—è',
          lastName: '–ò–≤–∞–Ω–æ–≤–∞',
          role: 'ADMIN'
        }
      });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin@company.com —Å —Ä–æ–ª—å—é ADMIN');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∏ –æ–±–Ω–æ–≤–∏–º boss@company.com
    const bossUser = await prisma.user.findUnique({
      where: { email: 'boss@company.com' }
    });
    
    if (bossUser && bossUser.role !== 'BOSS') {
      await prisma.user.update({
        where: { email: 'boss@company.com' },
        data: { role: 'BOSS' }
      });
      console.log('‚úÖ –†–æ–ª—å boss@company.com –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ BOSS');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    const users = await prisma.user.findMany({
      where: {
        email: {
          in: ['boss@company.com', 'admin@company.com', 'user@company.com']
        }
      },
      select: {
        email: true,
        firstName: true,
        lastName: true,
        role: true
      }
    });
    
    users.forEach(user => {
      console.log(`üë§ ${user.firstName} ${user.lastName} (${user.email}) - –†–æ–ª—å: ${user.role}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

fixUserRoles();